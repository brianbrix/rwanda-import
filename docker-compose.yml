version: "3.3"
services:
  airflow-common:
    image: ${AIRFLOW_IMAGE}
    env_file:
      - .env
    environment:
      - AIRFLOW__CORE__EXECUTOR=LocalExecutor
      - AIRFLOW_UID=${AIRFLOW_UID:-50000}
    volumes:
      - ${AIRFLOW_PROJ_DIR:-.}/dags:/opt/airflow/dags
      - ${AIRFLOW_PROJ_DIR:-.}/logs:/opt/airflow/logs
      - ${AIRFLOW_PROJ_DIR:-.}/plugins:/opt/airflow/plugins
      - ./utils:/opt/airflow/utils
      - /opt/etl:/opt/etl:ro
    user: "${AIRFLOW_UID:-50000}:0"
    command: webserver
    ports:
      - "8080:8080"
    container_name: dg-airflow
    labels:
      - "traefik.frontend.rule=Host:${AIRFLOW_HOST}"
      - "traefik.port=8080"
      - "traefik.docker.network=traefik_default"
    networks:
      - default
      - backend
      - nginxproxy
    depends_on:
      - airflow-postgres
  airflow-postgres:
    image: postgres:13-bullseye
    environment:
      POSTGRES_USER: airflow
      POSTGRES_PASSWORD: airflow
      POSTGRES_DB: airflow
    volumes:
      - postgres-db-volume:/var/lib/postgresql/data
    healthcheck:
      test:
        - CMD
        - pg_isready
        - -U
        - airflow
      interval: 10s
      retries: 5
    restart: always

  airflow-scheduler:
    image: ${AIRFLOW_IMAGE}
    env_file:
      - .env
    environment:
      - AIRFLOW__CORE__EXECUTOR=LocalExecutor
      - AIRFLOW_UID=${AIRFLOW_UID:-50000}
    volumes:
      - ${AIRFLOW_PROJ_DIR:-.}/dags:/opt/airflow/dags
      - ${AIRFLOW_PROJ_DIR:-.}/logs:/opt/airflow/logs
      - ${AIRFLOW_PROJ_DIR:-.}/plugins:/opt/airflow/plugins
      - /opt/etl:/opt/etl:ro
    user: "${AIRFLOW_UID:-50000}:0"
    command: schedular
    networks:
      - default
      - backend
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://localhost:8974/health"]
      interval: 30s
      timeout: 10s
      retries: 5
    restart: always
    depends_on:
      - airflow-postgres
volumes:
  postgres-db-volume: null

networks:
  default: null
  nginxproxy:
    external:
      name: traefik_default
  backend:
    external:
      name: backend
